from telebot import TeleBot, types
from electricity_bot.vars import generic_choice, generic_markup, cancel

def generic(message: types.Message, bot: TeleBot) -> None:
    name = message.from_user.first_name
    bot.send_message(
        message.chat.id,
        f"üëã –ß–∏–º —è –º–æ–∂—É —Ç–æ–±—ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏,<b> {name}</b>?",
        parse_mode="html",
        reply_markup=generic_markup,
    )

def do_update_schedule(
    message: types.Message,
    bot: TeleBot,
):
    if message.text == "–ù–∞–∑–∞–¥":
        generic(message, bot)
    elif message.text == "–¢–∞–∫":
        bot.send_message(
            message.chat.id,
            f"–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é –≥—Ä–∞—Ñ—ñ–∫—É.",
            parse_mode="html",
            reply_markup=cancel,
        )
        bot.register_next_step_handler(message, handle_photos, bot, False)

    elif message.text == "–ù—ñ":
        generic(message, bot)
    else:
        bot.send_message(
            message.chat.id,
            f'–ù–µ —Ä–æ–∑—É–º—ñ—é. –û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å "–¢–∞–∫", "–ù—ñ" –∞–±–æ "–ù–∞–∑–∞–¥".',
            parse_mode="html",
            reply_markup=generic_choice,
        )


def handle_photos(
    message: types.Message,
    bot: TeleBot,
    is_generic: bool = False,
) -> None:
    bot.user_action_logger.cmd(message, "handle_photos")
    if message.content_type == "photo":
        file_id = message.photo[-1].file_id
        bot.id_storage.save(file_id)

        bot.send_message(
            message.chat.id,
            f"–ì—Ä–∞—Ñ—ñ–∫ —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ.",
            parse_mode="html",
            reply_markup=generic_markup,
        )
        generic(message, bot)
    else:
        if message.text == "–ù–∞–∑–∞–¥":
            generic(message, bot)
        else:
            bot.send_message(
                message.chat.id,
                f"–ù–∞–¥—ñ—à–ª—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ—é.",
                parse_mode="html",
                reply_markup=cancel,
            )
            bot.register_next_step_handler(message, handle_photos, bot)